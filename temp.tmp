%button {
	& > button {}

	&:hover,
	&:focus,
	&:focus-within,
	&:active {}
}

.button {
	&:hover,
	&:focus,
	&:focus-within,
	&.is-hover {}

	&:not(div):active,
	&.is-active {}

	&[disabled],
	&.is-disabled {}

	&.is-active:hover {}

	&.is-hover:hover {}

	&.p0 {}

	&[aria-expanded='true'] .caret-like {}

	&.select {

		.mauto {}

		.mr0-5 {}
	}
}

.button-dark {}

.button-blue {
	&:focus,
	&:hover,
	&:focus-within,
	&.is-hover {}

	&:not(div):active,
	&.is-active {}

	&[disabled],
	&.is-disabled {}

	&.is-hover:hover {}
}

.button-blueborder {
	&:focus,
	&:hover,
	&:focus-within,
	&.is-hover {}

	&:not(div):active,
	&.is-active {}

	&[disabled],
	&.is-disabled {}
}

.button-blueborder-dark {}

.pv-button-green {
	&:focus,
	&:hover,
	&:focus-within,
	&.is-hover {}

	&:not(div):active,
	&.is-active {}

	&[disabled],
	&.is-disabled {}

	&.is-hover:hover {}
}

.pv-button-greenborder {
	&:focus,
	&:hover,
	&:focus-within,
	&.is-hover {}

	&:not(div):active,
	&.is-active {}

	&[disabled],
	&.is-disabled {}
}

.pv-button-greenborder-dark {}

/* button group */
.grouped-buttons {}

.grouped-button,
.grouped-button.is-active,
.grouped-button:hover,
.grouped-button:focus,
.grouped-button:active {}

.grouped-button:hover,
.grouped-button:focus,
.grouped-button:active {}

.grouped-buttons > .grouped-button:first-child {}

.grouped-buttons > .grouped-button:last-child {}

@if $rtl-option==true {
	[dir='rtl'] {
		.grouped-buttons > .grouped-button:not(.pagination-expand):first-child {}

		.grouped-buttons > .grouped-button:not(.pagination-expand):last-child {}
	}
}

/* special case for group button with primary colors */
.grouped-buttons > .grouped-button.button--primary {

	&:first-child {}

	&:not(:last-child) {}
}

/* exception for group buttons, disabled state should keep the border */
.grouped-button {
	&[disabled],
	&.is-disabled {
		&.button {}

		&.button-blueborder {}

		&.pv-button-greenborder {}
	}
}

/* aliases for buttons => different per project */
/* primary/link/error/warning/info */
@if ($pm-primary==$pm-blue) {
	.button--primary {}

	.button--primaryborder,
	.button--primaryborderEvenInDarkMode {}

	.button--primaryborder-dark {}
} @else {
	.button--primary {}

	.button--primaryborder,
	.button--primaryborderEvenInDarkMode {}

	.button--primaryborder-dark {}
}

.button--link,
.button.button--link {
	&:focus,
	&:hover,
	&:not(div):active,
	&:active {}

	&[disabled],
	&.is-disabled {}

	&.text-no-decoration {}

	&.button--currentColor {}
}

.button--error,
.button.button--error {
	&:focus,
	&:hover,
	&:not(div):active {}

	&[disabled],
	&.is-disabled {
		@include button-disabled-state($pm-global-warning);
	}
}

.button--warning,
.button.button--warning {
	&:focus,
	&:hover,
	&:not(div):active {}

	&[disabled],
	&.is-disabled {}
}

.button--info {}

/* other aliases requested */
.button--redborder,
.button.button--redborder {
	&:focus,
	&:hover,
	&:not(div):active,
	&:active {}
}

.button--whiteborder,
.button--primary.button.button--whiteborder {}

/* modifiers */
.button--large,
.button.button--large {}

.button--small,
.button.button--small {}

.button--for-icon {}

.button--for-smallicon {}

/* other modifiers requested */
.button--no-border {}

.button--currentColor {}

.button--pill {}

.button--transparent {
	&:focus,
	&:hover,
	&:not(div):active,
	&:active {}
}
