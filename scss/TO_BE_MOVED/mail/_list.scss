/*
 * items (conversations/contacts lists)
 */
$container-to-width: 3em !default;

.items-column-list {
	width: var(--width-conversation-column, calc((100% + var(--width-sidebar, #{$width-sidebar})) * #{$conversations-column-width/1%/100}));
}

.items-column-list-inner,
.ReactVirtualized__Grid__innerScrollContainer {
	border: solid var(--bordercolor-input, $pm-global-border);
	border-width: 0 1px;
	min-height: 100%;
}

.items-column-list-inner--noborder {
	// fix for Contact and ReactVirtualized__Grid
	border: 0;
}

.items-column-list--mobile {
	width: 100%;
}

.items-column-list,
.items-column-list--mobile,
.view-column-detail {
	height: 100%;
}

.view-column-detail {
	background: var(--bgcolor-view-column-detail, $white);
}

$item-container-height: 6.4rem !default;
$item-container-padding-top-bottom: em(8.5) !default;
$item-container-padding-left-right: em(12) !default;

$item-container-height-compact-mode: 4.8rem !default;
$item-container-row-height-compact-mode: 4rem !default;

.item-container,
.item-container-row {
	@extend %appearing-container;
	position: relative;
	padding: $item-container-padding-top-bottom $item-container-padding-left-right; // design wants ~64 height
	border-bottom: 1px solid var(--bordercolor-input, $pm-global-border);
	background-color: var(--bgcolor-item-column-list, $pm-global-muted);

	&::before {
		content: '';
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		z-index: 1;
		pointer-events: none;
		border: 1px solid transparent;
		transition: .15s easing(easeOutQuart);
	}

	&:hover::before {
		border-color: $pm-primary-light;
		box-shadow: 0 .125em .25em 0 var(--dropdown-box-shadow, $input-shadow-color);
	}
}

.item-container {
	height: $item-container-height;
}

// fix for Firefox multi-selection issue
.item-checkbox-label>.item-checkbox {
	width: 100%;
	height: 100%;
	z-index: 1;
}

.item-firstline,
.item-secondline {
	margin-bottom: .25em;
}

.item-secondline:empty {
	min-height: 1.5em;
}

/* Compact view */
.is-shown-when-compact {
	display: none;
}

.is-compact {

	.item-container,
	.item-container-row {
		height: $item-container-height-compact-mode;

		.item-container-inner {
			padding: em(0) em(12);
		}
	}

	.item-container-row {
		height: $item-container-row-height-compact-mode;
	}

	.item-icon-compact {
		&::after {
			height: $item-container-row-height-compact-mode;
		}
	}

	.item-firstline,
	.item-secondline {
		margin: 0;
	}

	.is-hidden-when-compact {
		display: none;
	}

	.is-shown-when-compact {
		display: flex;
	}
}

.item-is-selected,
.item-container.active {
	// alias for Angular
	background-color: var(--bgcolor-item-column-active, $conversation-selected-bg);
}

.item-container:not(.item-is-selected):not(.read):not(.active),
.item-container-row:not(.item-is-selected):not(.read):not(.active) {
	background-color: var(--bgcolor-unread-item-column-list, $white);
}

.item-is-loading {
	background-color: var(--bgcolor-main-area, white);
	pointer-events: none;

	.item-checkbox-label::before,
	.item-icon-compact::before,
	.item-senders::before,
	.item-senddate-col::before,
	.item-senddate-row::before,
	.item-weight::before,
	.item-star,
	.item-subject::before {
		@extend %placeholder-loading;
	}

	.item-checkbox-label,
	.item-icon-compact {
		position: relative;

		&::before {
			content: '';
			position: absolute;
			top: 0;
			right: 0;
			bottom: 0;
			left: 0;
			z-index: 1;
			border-radius: 50%;
			background-color: currentColor;
			opacity: 0;
		}

		.item-icon,
		.pm-checkbox-fakecheck {
			opacity: 0;
		}
	}

	.item-senders,
	.item-senddate-col,
	.item-senddate-row,
	.item-weight,
	.item-subject {
		&::before {
			@extend %item-loading-pseudo;
		}
	}

	.item-senders {
		&::before {
			width: 35%;
		}
	}

	.item-senddate-col {
		min-width: 6em;

		&::before {
			width: 100%;
		}
	}

	.item-senddate-row {

		&::before {
			width: 70%;
		}
	}

	.item-weight {
		min-width: 4em;

		&::before {
			width: 100%;
		}
	}

	.item-subject {
		&::before {
			width: 60%;
		}
	}
}



$conversation-icon-size: 3.2rem !default;

.item-icon {
	width: $conversation-icon-size;
	height: $conversation-icon-size;
	font-size: 1.2rem;
	border: 1px solid var(--bordercolor-input, $pm-global-border);
	background-color: var(--bordercolor-input, $white);
}

.item-icon-compact {
	width: $conversation-icon-size;
	height: $conversation-icon-size;
	border-radius: 50%;
	font-size: 1.2rem;
	transition: background .25s ease;

	&:hover {
		background: var(--bordercolor-input, $pm-global-light);
	}

	&::after {
		content: '';
		position: absolute;
		left: -#{em(12)};
		right: -#{em(12)};
		top: -#{($item-container-height-compact-mode - $conversation-icon-size)/2};
		height: $item-container-height-compact-mode;
	}
}

.item-checkbox {

	// for allowing hovering larger than fake circle
	&:after {
		content: '';
		position: absolute;
		top: -#{($item-container-height - $conversation-icon-size)/2};
		bottom: -#{($item-container-height - $conversation-icon-size)/2};
		left: em(-12);
		width: calc(#{$conversation-icon-size} + #{$item-container-padding-left-right} + .5rem);
		// icon size + padding container + tiny margin for comfort
	}

	// hidden fake check by default
	&+.item-icon>.item-icon-fakecheck {
		display: none;
	}

	// focus state (used global hover state) => NEEDS IMPROVEMENTS
	// &:focus + .item-icon {
	//   & > .item-abbr {
	//     display: none;
	//   }

	//   & > .item-icon-fakecheck {
	//     display: flex;
	//     transform: scale(1);
	//   }

	//   .item-icon-fakecheck-icon {
	//     fill: $pm-global-border;
	//   }
	// }

	// hover state of checkbox
	&:hover+.item-icon,
	&+.item-icon:hover {
		background-color: var(--bgcolor-input, $white);
		border-color: var(--bordercolor-input, $pm-global-border);

		&>.item-abbr {
			display: none;
		}

		&>.item-icon-fakecheck {
			display: flex;
			transform: scale(1);
		}

		.item-icon-fakecheck-icon {
			fill: $pm-primary;
		}
	}

	// checked state
	&:checked+.item-icon {
		background-color: $pm-primary;
		border-color: $pm-primary;

		&>.item-abbr {
			display: none;
		}

		&>.item-icon-fakecheck {
			display: flex;
			animation: conversationIconIn ease .15s;
		}

		.item-icon-fakecheck-icon {
			fill: $white;
		}
	}
}

// fix pseudo element for row layout
.item-container-row {
	.item-checkbox {
		&:after {
			top: -#{$item-container-padding-top-bottom};
			bottom: -#{$item-container-padding-top-bottom};
		}
	}

	.item-weight {
		min-width: 5em;
	}
}

@keyframes conversationIconIn {
	0% {
		transform: scale(0);
	}

	100% {
		transform: scale(1);
	}
}

.item-sender--smaller,
.item-date {
	font-size: em(12);
}

.message-header-metas-container {
	height: $conversation-icon-size;
}

.starbutton {
	color: var(--color-main-area, $pm-global-grey);
	width: 1.6rem;
	height: 1.6rem;
	opacity: .5;

	&:focus,
	&:hover {
		color: $pm-global-attention;
		opacity: 1;
	}

	[class*="starbutton-icon"] {
		position: absolute;
		top: 0;
		left: 0;
	}

	.starbutton-icon-starred {
		transform: scale(0);
		transition: transform .15s ease;
	}
}

.starbutton--is-starred {
	opacity: 1;
	color: $pm-global-attention;

	.starbutton-icon-starred {
		transform: scale(1);
	}
}

.pill-icon {
	display: inline-flex;
	padding: .125em .5em;
	border-radius: 1em;
	line-height: 1;

	&>* {
		color: white;
	}

	&-attachment {
		background-color: rgba(black, .5);
		// Plus some adaptations for dark theme in _pm-dark-theme.scss
	}
}
